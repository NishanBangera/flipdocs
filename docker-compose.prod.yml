version: '3.8'

services:
  # API Service (ElysiaJS with Bun)
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
      target: runner
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3001
    env_file:
      - .env.production
    depends_on:
      - redis
    networks:
      - flipdocs-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # Web Service (Next.js)
  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
      target: runner
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3000
    env_file:
      - .env.production
    depends_on:
      - api
    networks:
      - flipdocs-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 1G
          cpus: '1'
        reservations:
          memory: 512M
          cpus: '0.5'

  # Nginx Load Balancer and Reverse Proxy
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/prod-http.conf:/etc/nginx/nginx.conf:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - web
      - api
    networks:
      - flipdocs-network
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.2'
        reservations:
          memory: 64M
          cpus: '0.1'

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - flipdocs-network
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.2'
        reservations:
          memory: 128M
          cpus: '0.1'



volumes:
  nginx_logs:
  redis_data:

networks:
  flipdocs-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16